
We generate the FULL G-GRAPH: 

Generation nr.0: <R,s0>; <K,q0>
Generation nr.1: <K,q0>_1; <R,s0>_1; <R,s1>
Generation nr.2: <R,s1>_1; <R,s0>_2; <K,q0>_2; <R,s2>
Generation nr.3: <R,s2>_1; <K,q0>_3; <R,s0>_3; <R,s1>_2; <K,q1>

BOTTOM-UP VISIT of the G-graph. For every node we choose origin node and providers.

LINEARIZATION phase

The linearized paths are the following:

<R,s0> <R,s1> <R,s2> 

<K,q0> <K,q1> 


The INSTANCE LINES are the following:

Instance k_1 : (C,q0) --<K,q0>--> (q0,q1) --<K,q1>--> (q1,D) 

Instance r_0 : (C,s0) --<R,s0>--> (s0,s1) --<R,s1>--> (s1,s2) --<R,s2>--> (s2,D) 

Next we ADD GO (blue) and RETURN (red) EDGES. 


The INSTANCE LINES are the following:

Instance k_1 : (C,q0) --<K,q0>--> (q0,q1) --<K,q1>--> (q1,D) 

Instance r_0 : (C,s0) --<R,s0>--> (s0,s1) --<R,s1>--> (s1,s2) --<R,s2>--> (s2,D) 

Now we perform a TOPOLOGICAL SORT.

And finally the COMPUTED PLAN is:

k_1 must perform actions: [Create instance]
r_0 must perform actions: [Create instance]
r_0 must perform actions: [Change state from s0 to s1]
r_0 must perform actions: [Bind port p2 to instance k_1]  [Change state from s1 to s2]
k_1 must perform actions: [Change state from q0 to q1]
k_1 must perform actions: [Stop]
r_0 must perform actions: [Stop]
