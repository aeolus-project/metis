
We generate the FULL G-GRAPH: 

Generation nr.0: <B,q0>; <A,s0>
Generation nr.1: <A,s0>_1; <B,q0>_1; <A,s1>
Generation nr.2: <A,s1>_1; <B,q0>_2; <A,s0>_2; <B,q1>
Generation nr.3: <B,q1>_1; <A,s0>_3; <B,q0>_3; <A,s1>_2; <A,s2>
Generation nr.4: <A,s2>_1; <A,s1>_3; <B,q0>_4; <A,s0>_4; <B,q1>_2; <B,q2>
Generation nr.5: <B,q2>_1; <B,q1>_3; <A,s0>_5; <B,q0>_5; <A,s1>_4; <A,s2>_2; <A,s3>
Generation nr.6: <A,s3>_1; <A,s2>_3; <A,s1>_5; <B,q0>_6; <A,s0>_6; <B,q1>_4; <B,q2>_2; <B,q3>
Generation nr.7: <B,q3>_1; <B,q2>_3; <B,q1>_5; <A,s0>_7; <B,q0>_7; <A,s1>_6; <A,s2>_4; <A,s3>_2; <A,s4>
Generation nr.8: <A,s4>_1; <A,s3>_3; <A,s2>_5; <A,s1>_7; <B,q0>_8; <A,s0>_8; <B,q1>_6; <B,q2>_4; <B,q3>_2; <B,q4>
Generation nr.9: <B,q4>_1; <B,q3>_3; <B,q2>_5; <B,q1>_7; <A,s0>_9; <B,q0>_9; <A,s1>_8; <A,s2>_6; <A,s3>_4; <A,s4>_2; <A,s5>
Generation nr.10: <A,s5>_1; <A,s4>_3; <A,s3>_5; <A,s2>_7; <A,s1>_9; <B,q0>_10; <A,s0>_10; <B,q1>_8; <B,q2>_6; <B,q3>_4; <B,q4>_2; <B,q5>
Generation nr.11: <B,q5>_1; <B,q4>_3; <B,q3>_5; <B,q2>_7; <B,q1>_9; <A,s0>_11; <B,q0>_11; <A,s1>_10; <A,s2>_8; <A,s3>_6; <A,s4>_4; <A,s5>_2; <A,s6>
Generation nr.12: <A,s6>_1; <A,s5>_3; <A,s4>_5; <A,s3>_7; <A,s2>_9; <A,s1>_11; <B,q0>_12; <A,s0>_12; <B,q1>_10; <B,q2>_8; <B,q3>_6; <B,q4>_4; <B,q5>_2; <B,q6>
Generation nr.13: <B,q6>_1; <B,q5>_3; <B,q4>_5; <B,q3>_7; <B,q2>_9; <B,q1>_11; <A,s0>_13; <B,q0>_13; <A,s1>_12; <A,s2>_10; <A,s3>_8; <A,s4>_6; <A,s5>_4; <A,s6>_2; <A,s7>
Generation nr.14: <A,s7>_1; <A,s6>_3; <A,s5>_5; <A,s4>_7; <A,s3>_9; <A,s2>_11; <A,s1>_13; <B,q0>_14; <A,s0>_14; <B,q1>_12; <B,q2>_10; <B,q3>_8; <B,q4>_6; <B,q5>_4; <B,q6>_2; <B,q7>
Generation nr.15: <B,q7>_1; <B,q6>_3; <B,q5>_5; <B,q4>_7; <B,q3>_9; <B,q2>_11; <B,q1>_13; <A,s0>_15; <B,q0>_15; <A,s1>_14; <A,s2>_12; <A,s3>_10; <A,s4>_8; <A,s5>_6; <A,s6>_4; <A,s7>_2; <A,s8>
Generation nr.16: <A,s8>_1; <A,s7>_3; <A,s6>_5; <A,s5>_7; <A,s4>_9; <A,s3>_11; <A,s2>_13; <A,s1>_15; <B,q0>_16; <A,s0>_16; <B,q1>_14; <B,q2>_12; <B,q3>_10; <B,q4>_8; <B,q5>_6; <B,q6>_4; <B,q7>_2; <B,q8>
Generation nr.17: <B,q8>_1; <B,q7>_3; <B,q6>_5; <B,q5>_7; <B,q4>_9; <B,q3>_11; <B,q2>_13; <B,q1>_15; <A,s0>_17; <B,q0>_17; <A,s1>_16; <A,s2>_14; <A,s3>_12; <A,s4>_10; <A,s5>_8; <A,s6>_6; <A,s7>_4; <A,s8>_2; <A,s9>
Generation nr.18: <A,s9>_1; <A,s8>_3; <A,s7>_5; <A,s6>_7; <A,s5>_9; <A,s4>_11; <A,s3>_13; <A,s2>_15; <A,s1>_17; <B,q0>_18; <A,s0>_18; <B,q1>_16; <B,q2>_14; <B,q3>_12; <B,q4>_10; <B,q5>_8; <B,q6>_6; <B,q7>_4; <B,q8>_2; <B,q9>

BOTTOM-UP VISIT of the G-graph. For every node we choose origin node and providers.

LINEARIZATION phase

The linearized paths are the following:

<A,s0> <A,s1> <A,s2> <A,s3> <A,s4> <A,s5> <A,s6> <A,s7> <A,s8> <A,s9> 

<B,q0> <B,q1> <B,q2> <B,q3> <B,q4> <B,q5> <B,q6> <B,q7> <B,q8> <B,q9> 


The INSTANCE LINES are the following:

Instance b :
b (C,q0) nr.IN-edges =  0
 GO EDGES: 
 RETURN EDGES: 
 INST EDGE: --<B,q0>--> b (q0,q1)

b (q0,q1) nr.IN-edges =  1
 GO EDGES: 
 RETURN EDGES: 
 INST EDGE: --<B,q1>--> b (q1,q2)

b (q1,q2) nr.IN-edges =  1
 GO EDGES: 
 RETURN EDGES: 
 INST EDGE: --<B,q2>--> b (q2,q3)

b (q2,q3) nr.IN-edges =  1
 GO EDGES: 
 RETURN EDGES: 
 INST EDGE: --<B,q3>--> b (q3,q4)

b (q3,q4) nr.IN-edges =  1
 GO EDGES: 
 RETURN EDGES: 
 INST EDGE: --<B,q4>--> b (q4,q5)

b (q4,q5) nr.IN-edges =  1
 GO EDGES: 
 RETURN EDGES: 
 INST EDGE: --<B,q5>--> b (q5,q6)

b (q5,q6) nr.IN-edges =  1
 GO EDGES: 
 RETURN EDGES: 
 INST EDGE: --<B,q6>--> b (q6,q7)

b (q6,q7) nr.IN-edges =  1
 GO EDGES: 
 RETURN EDGES: 
 INST EDGE: --<B,q7>--> b (q7,q8)

b (q7,q8) nr.IN-edges =  1
 GO EDGES: 
 RETURN EDGES: 
 INST EDGE: --<B,q8>--> b (q8,q9)

b (q8,q9) nr.IN-edges =  1
 GO EDGES: 
 RETURN EDGES: 
 INST EDGE: --<B,q9>--> b (q9,D)

b (q9,D) nr.IN-edges =  1
 GO EDGES: 
 RETURN EDGES: 
 INST EDGE: { }

Instance a :
a (C,s0) nr.IN-edges =  0
 GO EDGES: 
 RETURN EDGES: 
 INST EDGE: --<A,s0>--> a (s0,s1)

a (s0,s1) nr.IN-edges =  1
 GO EDGES: 
 RETURN EDGES: 
 INST EDGE: --<A,s1>--> a (s1,s2)

a (s1,s2) nr.IN-edges =  1
 GO EDGES: 
 RETURN EDGES: 
 INST EDGE: --<A,s2>--> a (s2,s3)

a (s2,s3) nr.IN-edges =  1
 GO EDGES: 
 RETURN EDGES: 
 INST EDGE: --<A,s3>--> a (s3,s4)

a (s3,s4) nr.IN-edges =  1
 GO EDGES: 
 RETURN EDGES: 
 INST EDGE: --<A,s4>--> a (s4,s5)

a (s4,s5) nr.IN-edges =  1
 GO EDGES: 
 RETURN EDGES: 
 INST EDGE: --<A,s5>--> a (s5,s6)

a (s5,s6) nr.IN-edges =  1
 GO EDGES: 
 RETURN EDGES: 
 INST EDGE: --<A,s6>--> a (s6,s7)

a (s6,s7) nr.IN-edges =  1
 GO EDGES: 
 RETURN EDGES: 
 INST EDGE: --<A,s7>--> a (s7,s8)

a (s7,s8) nr.IN-edges =  1
 GO EDGES: 
 RETURN EDGES: 
 INST EDGE: --<A,s8>--> a (s8,s9)

a (s8,s9) nr.IN-edges =  1
 GO EDGES: 
 RETURN EDGES: 
 INST EDGE: --<A,s9>--> a (s9,D)

a (s9,D) nr.IN-edges =  1
 GO EDGES: 
 RETURN EDGES: 
 INST EDGE: { }

Next we ADD GO (blue) and RETURN (red) EDGES. 


Now the INSTANCE LINES WITH EDGES look like this:

Instance b :
b (C,q0) nr.IN-edges =  0
 GO EDGES: 
 RETURN EDGES: 
 INST EDGE: --<B,q0>--> b (q0,q1)

b (q0,q1) nr.IN-edges =  2
 GO EDGES: ---p1_2---> a (s1,s2)
 RETURN EDGES: 
 INST EDGE: --<B,q1>--> b (q1,q2)

b (q1,q2) nr.IN-edges =  2
 GO EDGES: ---p1_3---> a (s2,s3)
 RETURN EDGES: ---p0_1---> a (s1,s2)
 INST EDGE: --<B,q2>--> b (q2,q3)

b (q2,q3) nr.IN-edges =  3
 GO EDGES: ---p1_4---> a (s3,s4)
 RETURN EDGES: ---p0_2---> a (s3,s4)
 INST EDGE: --<B,q3>--> b (q3,q4)

b (q3,q4) nr.IN-edges =  3
 GO EDGES: ---p1_5---> a (s4,s5)
 RETURN EDGES: ---p0_3---> a (s4,s5)
 INST EDGE: --<B,q4>--> b (q4,q5)

b (q4,q5) nr.IN-edges =  3
 GO EDGES: ---p1_6---> a (s5,s6)
 RETURN EDGES: ---p0_4---> a (s5,s6)
 INST EDGE: --<B,q5>--> b (q5,q6)

b (q5,q6) nr.IN-edges =  3
 GO EDGES: ---p1_7---> a (s6,s7)
 RETURN EDGES: ---p0_5---> a (s6,s7)
 INST EDGE: --<B,q6>--> b (q6,q7)

b (q6,q7) nr.IN-edges =  3
 GO EDGES: ---p1_8---> a (s7,s8)
 RETURN EDGES: ---p0_6---> a (s6,s7)
 INST EDGE: --<B,q7>--> b (q7,q8)

b (q7,q8) nr.IN-edges =  3
 GO EDGES: ---p1_9---> a (s8,s9)
 RETURN EDGES: ---p0_7---> a (s8,s9)
 INST EDGE: --<B,q8>--> b (q8,q9)

b (q8,q9) nr.IN-edges =  3
 GO EDGES: 
 RETURN EDGES: ---p0_8---> a (s9,D)
 INST EDGE: --<B,q9>--> b (q9,D)

b (q9,D) nr.IN-edges =  2
 GO EDGES: 
 RETURN EDGES: ---p0_9---> a (s9,D)
 INST EDGE: { }

Instance a :
a (C,s0) nr.IN-edges =  0
 GO EDGES: 
 RETURN EDGES: 
 INST EDGE: --<A,s0>--> a (s0,s1)

a (s0,s1) nr.IN-edges =  1
 GO EDGES: ---p0_1---> b (q0,q1)
 RETURN EDGES: 
 INST EDGE: --<A,s1>--> a (s1,s2)

a (s1,s2) nr.IN-edges =  3
 GO EDGES: ---p0_2---> b (q1,q2)
 RETURN EDGES: 
 INST EDGE: --<A,s2>--> a (s2,s3)

a (s2,s3) nr.IN-edges =  2
 GO EDGES: ---p0_3---> b (q2,q3)
 RETURN EDGES: ---p1_2---> b (q2,q3)
 INST EDGE: --<A,s3>--> a (s3,s4)

a (s3,s4) nr.IN-edges =  3
 GO EDGES: ---p0_4---> b (q3,q4)
 RETURN EDGES: ---p1_3---> b (q3,q4)
 INST EDGE: --<A,s4>--> a (s4,s5)

a (s4,s5) nr.IN-edges =  3
 GO EDGES: ---p0_5---> b (q4,q5)
 RETURN EDGES: ---p1_4---> b (q4,q5)
 INST EDGE: --<A,s5>--> a (s5,s6)

a (s5,s6) nr.IN-edges =  3
 GO EDGES: ---p0_6---> b (q5,q6)
 RETURN EDGES: ---p1_5---> b (q5,q6)
 INST EDGE: --<A,s6>--> a (s6,s7)

a (s6,s7) nr.IN-edges =  4
 GO EDGES: ---p0_7---> b (q6,q7)
 RETURN EDGES: ---p1_6---> b (q6,q7)
 INST EDGE: --<A,s7>--> a (s7,s8)

a (s7,s8) nr.IN-edges =  2
 GO EDGES: ---p0_8---> b (q7,q8)
 RETURN EDGES: ---p1_7---> b (q7,q8)
 INST EDGE: --<A,s8>--> a (s8,s9)

a (s8,s9) nr.IN-edges =  3
 GO EDGES: ---p0_9---> b (q8,q9)
 RETURN EDGES: ---p1_8---> b (q8,q9)
 INST EDGE: --<A,s9>--> a (s9,D)

a (s9,D) nr.IN-edges =  3
 GO EDGES: 
 RETURN EDGES: ---p1_9---> b (q9,D)
 INST EDGE: { }


----------------------- PLAN SYNTHESIS START -----------------------
Added action [Create instance b:B] to the plan.
Added action [Create instance a:A] to the plan.
External loop iteration i = 0

*********************** Internal loop iteration j = 0
Plan BEFORE: 
 Plan[1] = [Create instance b:B]
 Plan[2] = [Create instance a:A]
Vertex popped: a (C,s0)
STACK = 
b (C,q0) | 
Deal with successor vertex.
INST Edge: PUSH vertex: a (s0,s1)
STACK = 
a (s0,s1) | b (C,q0) | 
Vertex removed: a (C,s0)

*********************** Internal loop iteration j = 1
Plan BEFORE: 
 Plan[1] = [Create instance b:B]
 Plan[2] = [Create instance a:A]
Vertex popped: a (s0,s1)
STACK = 
b (C,q0) | 
It's an intermediate vertex => add action [a : change state from s0 to s1] to the plan.
Deal with go/blue edges
Deal with return/red edges
Deal with successor vertex.
Vertex removed: a (s0,s1)

*********************** Internal loop iteration j = 2
Plan BEFORE: 
 Plan[1] = [Create instance b:B]
 Plan[2] = [Create instance a:A]
 Plan[3] = [a : change state from s0 to s1]
 Plan[4] = [a : bind port p0_1 to instance b]
Vertex popped: b (C,q0)
STACK = 
[]
Deal with successor vertex.
INST Edge: PUSH vertex: b (q0,q1)
STACK = 
b (q0,q1) | 
Vertex removed: b (C,q0)

*********************** Internal loop iteration j = 3
Plan BEFORE: 
 Plan[1] = [Create instance b:B]
 Plan[2] = [Create instance a:A]
 Plan[3] = [a : change state from s0 to s1]
 Plan[4] = [a : bind port p0_1 to instance b]
Vertex popped: b (q0,q1)
STACK = 
[]
It's an intermediate vertex => add action [b : change state from q0 to q1] to the plan.
Deal with go/blue edges
Deal with return/red edges
Deal with successor vertex.
Vertex removed: b (q0,q1)

 ************************* NEED INSTANCE DUPLICATION *************************** 
The list of candidates is the following one: a (s1,s2)
Chosen vertex for splitting = a (s1,s2)
Built the following new vertex = a' (s1,D)
Pushed duplicated vertex: a (s1,s2)
STACK = 
a (s1,s2) | 
External loop iteration i = 1

*********************** Internal loop iteration j = 0
Plan BEFORE: 
 Plan[1] = [Create instance b:B]
 Plan[2] = [Create instance a':A]
 Plan[3] = [Create instance a:A]
 Plan[4] = [a' : change state from s0 to s1]
 Plan[5] = [a : change state from s0 to s1]
 Plan[6] = [a' : bind port p0_1 to instance b]
 Plan[7] = [b : change state from q0 to q1]
 Plan[8] = [b : bind port p1_2 to instance a']
 Plan[9] = [b : bind port p1_2 to instance a]
Vertex popped: a (s1,s2)
STACK = 
[]
It's an intermediate vertex => add action [a : change state from s1 to s2] to the plan.
Deal with go/blue edges
GO Edge: PUSH vertex: b (q1,q2)
STACK = 
b (q1,q2) | 
Deal with return/red edges
Deal with successor vertex.
Vertex removed: a (s1,s2)

*********************** Internal loop iteration j = 1
Plan BEFORE: 
 Plan[1] = [Create instance b:B]
 Plan[2] = [Create instance a':A]
 Plan[3] = [Create instance a:A]
 Plan[4] = [a' : change state from s0 to s1]
 Plan[5] = [a : change state from s0 to s1]
 Plan[6] = [a' : bind port p0_1 to instance b]
 Plan[7] = [b : change state from q0 to q1]
 Plan[8] = [b : bind port p1_2 to instance a']
 Plan[9] = [b : bind port p1_2 to instance a]
 Plan[10] = [a : change state from s1 to s2]
 Plan[11] = [a : bind port p0_2 to instance b]
Vertex popped: b (q1,q2)
STACK = 
[]
It's an intermediate vertex => add action [b : change state from q1 to q2] to the plan.
Deal with go/blue edges
GO Edge: PUSH vertex: a (s2,s3)
STACK = 
a (s2,s3) | 
Deal with return/red edges
RETURN Edge: PUSH vertex: a' (s1,D)
STACK = 
a' (s1,D) | a (s2,s3) | 
Deal with successor vertex.
Vertex removed: b (q1,q2)

*********************** Internal loop iteration j = 2
Plan BEFORE: 
 Plan[1] = [Create instance b:B]
 Plan[2] = [Create instance a':A]
 Plan[3] = [Create instance a:A]
 Plan[4] = [a' : change state from s0 to s1]
 Plan[5] = [a : change state from s0 to s1]
 Plan[6] = [a' : bind port p0_1 to instance b]
 Plan[7] = [b : change state from q0 to q1]
 Plan[8] = [b : bind port p1_2 to instance a']
 Plan[9] = [b : bind port p1_2 to instance a]
 Plan[10] = [a : change state from s1 to s2]
 Plan[11] = [a : bind port p0_2 to instance b]
 Plan[12] = [b : change state from q1 to q2]
 Plan[13] = [b : bind port p1_3 to instance a]
 Plan[14] = [b : unbind port p0_1 from instance a']
Vertex popped: a' (s1,D)
STACK = 
a (s2,s3) | 
Deal with return/red edges
Current vertex is final: we add a Del action to the plan.
Vertex removed: a' (s1,D)

*********************** Internal loop iteration j = 3
Plan BEFORE: 
 Plan[1] = [Create instance b:B]
 Plan[2] = [Create instance a':A]
 Plan[3] = [Create instance a:A]
 Plan[4] = [a' : change state from s0 to s1]
 Plan[5] = [a : change state from s0 to s1]
 Plan[6] = [a' : bind port p0_1 to instance b]
 Plan[7] = [b : change state from q0 to q1]
 Plan[8] = [b : bind port p1_2 to instance a']
 Plan[9] = [b : bind port p1_2 to instance a]
 Plan[10] = [a : change state from s1 to s2]
 Plan[11] = [a : bind port p0_2 to instance b]
 Plan[12] = [b : change state from q1 to q2]
 Plan[13] = [b : bind port p1_3 to instance a]
 Plan[14] = [b : unbind port p0_1 from instance a']
 Plan[15] = [a' : stop]
Vertex popped: a (s2,s3)
STACK = 
[]
It's an intermediate vertex => add action [a : change state from s2 to s3] to the plan.
Deal with go/blue edges
Deal with return/red edges
RETURN Edge: PUSH vertex: b (q2,q3)
STACK = 
b (q2,q3) | 
Deal with successor vertex.
Vertex removed: a (s2,s3)

*********************** Internal loop iteration j = 4
Plan BEFORE: 
 Plan[1] = [Create instance b:B]
 Plan[2] = [Create instance a':A]
 Plan[3] = [Create instance a:A]
 Plan[4] = [a' : change state from s0 to s1]
 Plan[5] = [a : change state from s0 to s1]
 Plan[6] = [a' : bind port p0_1 to instance b]
 Plan[7] = [b : change state from q0 to q1]
 Plan[8] = [b : bind port p1_2 to instance a']
 Plan[9] = [b : bind port p1_2 to instance a]
 Plan[10] = [a : change state from s1 to s2]
 Plan[11] = [a : bind port p0_2 to instance b]
 Plan[12] = [b : change state from q1 to q2]
 Plan[13] = [b : bind port p1_3 to instance a]
 Plan[14] = [b : unbind port p0_1 from instance a']
 Plan[15] = [a' : stop]
 Plan[16] = [a : change state from s2 to s3]
 Plan[17] = [a : bind port p0_3 to instance b]
 Plan[18] = [a : unbind port p1_2 from instance b]
Vertex popped: b (q2,q3)
STACK = 
[]
It's an intermediate vertex => add action [b : change state from q2 to q3] to the plan.
Deal with go/blue edges
Deal with return/red edges
RETURN Edge: PUSH vertex: a (s3,s4)
STACK = 
a (s3,s4) | 
Deal with successor vertex.
Vertex removed: b (q2,q3)

*********************** Internal loop iteration j = 5
Plan BEFORE: 
 Plan[1] = [Create instance b:B]
 Plan[2] = [Create instance a':A]
 Plan[3] = [Create instance a:A]
 Plan[4] = [a' : change state from s0 to s1]
 Plan[5] = [a : change state from s0 to s1]
 Plan[6] = [a' : bind port p0_1 to instance b]
 Plan[7] = [b : change state from q0 to q1]
 Plan[8] = [b : bind port p1_2 to instance a']
 Plan[9] = [b : bind port p1_2 to instance a]
 Plan[10] = [a : change state from s1 to s2]
 Plan[11] = [a : bind port p0_2 to instance b]
 Plan[12] = [b : change state from q1 to q2]
 Plan[13] = [b : bind port p1_3 to instance a]
 Plan[14] = [b : unbind port p0_1 from instance a']
 Plan[15] = [a' : stop]
 Plan[16] = [a : change state from s2 to s3]
 Plan[17] = [a : bind port p0_3 to instance b]
 Plan[18] = [a : unbind port p1_2 from instance b]
 Plan[19] = [b : change state from q2 to q3]
 Plan[20] = [b : bind port p1_4 to instance a]
 Plan[21] = [b : unbind port p0_2 from instance a]
Vertex popped: a (s3,s4)
STACK = 
[]
It's an intermediate vertex => add action [a : change state from s3 to s4] to the plan.
Deal with go/blue edges
Deal with return/red edges
RETURN Edge: PUSH vertex: b (q3,q4)
STACK = 
b (q3,q4) | 
Deal with successor vertex.
Vertex removed: a (s3,s4)

*********************** Internal loop iteration j = 6
Plan BEFORE: 
 Plan[1] = [Create instance b:B]
 Plan[2] = [Create instance a':A]
 Plan[3] = [Create instance a:A]
 Plan[4] = [a' : change state from s0 to s1]
 Plan[5] = [a : change state from s0 to s1]
 Plan[6] = [a' : bind port p0_1 to instance b]
 Plan[7] = [b : change state from q0 to q1]
 Plan[8] = [b : bind port p1_2 to instance a']
 Plan[9] = [b : bind port p1_2 to instance a]
 Plan[10] = [a : change state from s1 to s2]
 Plan[11] = [a : bind port p0_2 to instance b]
 Plan[12] = [b : change state from q1 to q2]
 Plan[13] = [b : bind port p1_3 to instance a]
 Plan[14] = [b : unbind port p0_1 from instance a']
 Plan[15] = [a' : stop]
 Plan[16] = [a : change state from s2 to s3]
 Plan[17] = [a : bind port p0_3 to instance b]
 Plan[18] = [a : unbind port p1_2 from instance b]
 Plan[19] = [b : change state from q2 to q3]
 Plan[20] = [b : bind port p1_4 to instance a]
 Plan[21] = [b : unbind port p0_2 from instance a]
 Plan[22] = [a : change state from s3 to s4]
 Plan[23] = [a : bind port p0_4 to instance b]
 Plan[24] = [a : unbind port p1_3 from instance b]
Vertex popped: b (q3,q4)
STACK = 
[]
It's an intermediate vertex => add action [b : change state from q3 to q4] to the plan.
Deal with go/blue edges
Deal with return/red edges
RETURN Edge: PUSH vertex: a (s4,s5)
STACK = 
a (s4,s5) | 
Deal with successor vertex.
Vertex removed: b (q3,q4)

*********************** Internal loop iteration j = 7
Plan BEFORE: 
 Plan[1] = [Create instance b:B]
 Plan[2] = [Create instance a':A]
 Plan[3] = [Create instance a:A]
 Plan[4] = [a' : change state from s0 to s1]
 Plan[5] = [a : change state from s0 to s1]
 Plan[6] = [a' : bind port p0_1 to instance b]
 Plan[7] = [b : change state from q0 to q1]
 Plan[8] = [b : bind port p1_2 to instance a']
 Plan[9] = [b : bind port p1_2 to instance a]
 Plan[10] = [a : change state from s1 to s2]
 Plan[11] = [a : bind port p0_2 to instance b]
 Plan[12] = [b : change state from q1 to q2]
 Plan[13] = [b : bind port p1_3 to instance a]
 Plan[14] = [b : unbind port p0_1 from instance a']
 Plan[15] = [a' : stop]
 Plan[16] = [a : change state from s2 to s3]
 Plan[17] = [a : bind port p0_3 to instance b]
 Plan[18] = [a : unbind port p1_2 from instance b]
 Plan[19] = [b : change state from q2 to q3]
 Plan[20] = [b : bind port p1_4 to instance a]
 Plan[21] = [b : unbind port p0_2 from instance a]
 Plan[22] = [a : change state from s3 to s4]
 Plan[23] = [a : bind port p0_4 to instance b]
 Plan[24] = [a : unbind port p1_3 from instance b]
 Plan[25] = [b : change state from q3 to q4]
 Plan[26] = [b : bind port p1_5 to instance a]
 Plan[27] = [b : unbind port p0_3 from instance a]
Vertex popped: a (s4,s5)
STACK = 
[]
It's an intermediate vertex => add action [a : change state from s4 to s5] to the plan.
Deal with go/blue edges
Deal with return/red edges
RETURN Edge: PUSH vertex: b (q4,q5)
STACK = 
b (q4,q5) | 
Deal with successor vertex.
Vertex removed: a (s4,s5)

*********************** Internal loop iteration j = 8
Plan BEFORE: 
 Plan[1] = [Create instance b:B]
 Plan[2] = [Create instance a':A]
 Plan[3] = [Create instance a:A]
 Plan[4] = [a' : change state from s0 to s1]
 Plan[5] = [a : change state from s0 to s1]
 Plan[6] = [a' : bind port p0_1 to instance b]
 Plan[7] = [b : change state from q0 to q1]
 Plan[8] = [b : bind port p1_2 to instance a']
 Plan[9] = [b : bind port p1_2 to instance a]
 Plan[10] = [a : change state from s1 to s2]
 Plan[11] = [a : bind port p0_2 to instance b]
 Plan[12] = [b : change state from q1 to q2]
 Plan[13] = [b : bind port p1_3 to instance a]
 Plan[14] = [b : unbind port p0_1 from instance a']
 Plan[15] = [a' : stop]
 Plan[16] = [a : change state from s2 to s3]
 Plan[17] = [a : bind port p0_3 to instance b]
 Plan[18] = [a : unbind port p1_2 from instance b]
 Plan[19] = [b : change state from q2 to q3]
 Plan[20] = [b : bind port p1_4 to instance a]
 Plan[21] = [b : unbind port p0_2 from instance a]
 Plan[22] = [a : change state from s3 to s4]
 Plan[23] = [a : bind port p0_4 to instance b]
 Plan[24] = [a : unbind port p1_3 from instance b]
 Plan[25] = [b : change state from q3 to q4]
 Plan[26] = [b : bind port p1_5 to instance a]
 Plan[27] = [b : unbind port p0_3 from instance a]
 Plan[28] = [a : change state from s4 to s5]
 Plan[29] = [a : bind port p0_5 to instance b]
 Plan[30] = [a : unbind port p1_4 from instance b]
Vertex popped: b (q4,q5)
STACK = 
[]
It's an intermediate vertex => add action [b : change state from q4 to q5] to the plan.
Deal with go/blue edges
Deal with return/red edges
RETURN Edge: PUSH vertex: a (s5,s6)
STACK = 
a (s5,s6) | 
Deal with successor vertex.
Vertex removed: b (q4,q5)

*********************** Internal loop iteration j = 9
Plan BEFORE: 
 Plan[1] = [Create instance b:B]
 Plan[2] = [Create instance a':A]
 Plan[3] = [Create instance a:A]
 Plan[4] = [a' : change state from s0 to s1]
 Plan[5] = [a : change state from s0 to s1]
 Plan[6] = [a' : bind port p0_1 to instance b]
 Plan[7] = [b : change state from q0 to q1]
 Plan[8] = [b : bind port p1_2 to instance a']
 Plan[9] = [b : bind port p1_2 to instance a]
 Plan[10] = [a : change state from s1 to s2]
 Plan[11] = [a : bind port p0_2 to instance b]
 Plan[12] = [b : change state from q1 to q2]
 Plan[13] = [b : bind port p1_3 to instance a]
 Plan[14] = [b : unbind port p0_1 from instance a']
 Plan[15] = [a' : stop]
 Plan[16] = [a : change state from s2 to s3]
 Plan[17] = [a : bind port p0_3 to instance b]
 Plan[18] = [a : unbind port p1_2 from instance b]
 Plan[19] = [b : change state from q2 to q3]
 Plan[20] = [b : bind port p1_4 to instance a]
 Plan[21] = [b : unbind port p0_2 from instance a]
 Plan[22] = [a : change state from s3 to s4]
 Plan[23] = [a : bind port p0_4 to instance b]
 Plan[24] = [a : unbind port p1_3 from instance b]
 Plan[25] = [b : change state from q3 to q4]
 Plan[26] = [b : bind port p1_5 to instance a]
 Plan[27] = [b : unbind port p0_3 from instance a]
 Plan[28] = [a : change state from s4 to s5]
 Plan[29] = [a : bind port p0_5 to instance b]
 Plan[30] = [a : unbind port p1_4 from instance b]
 Plan[31] = [b : change state from q4 to q5]
 Plan[32] = [b : bind port p1_6 to instance a]
 Plan[33] = [b : unbind port p0_4 from instance a]
Vertex popped: a (s5,s6)
STACK = 
[]
It's an intermediate vertex => add action [a : change state from s5 to s6] to the plan.
Deal with go/blue edges
Deal with return/red edges
RETURN Edge: PUSH vertex: b (q5,q6)
STACK = 
b (q5,q6) | 
Deal with successor vertex.
Vertex removed: a (s5,s6)

*********************** Internal loop iteration j = 10
Plan BEFORE: 
 Plan[1] = [Create instance b:B]
 Plan[2] = [Create instance a':A]
 Plan[3] = [Create instance a:A]
 Plan[4] = [a' : change state from s0 to s1]
 Plan[5] = [a : change state from s0 to s1]
 Plan[6] = [a' : bind port p0_1 to instance b]
 Plan[7] = [b : change state from q0 to q1]
 Plan[8] = [b : bind port p1_2 to instance a']
 Plan[9] = [b : bind port p1_2 to instance a]
 Plan[10] = [a : change state from s1 to s2]
 Plan[11] = [a : bind port p0_2 to instance b]
 Plan[12] = [b : change state from q1 to q2]
 Plan[13] = [b : bind port p1_3 to instance a]
 Plan[14] = [b : unbind port p0_1 from instance a']
 Plan[15] = [a' : stop]
 Plan[16] = [a : change state from s2 to s3]
 Plan[17] = [a : bind port p0_3 to instance b]
 Plan[18] = [a : unbind port p1_2 from instance b]
 Plan[19] = [b : change state from q2 to q3]
 Plan[20] = [b : bind port p1_4 to instance a]
 Plan[21] = [b : unbind port p0_2 from instance a]
 Plan[22] = [a : change state from s3 to s4]
 Plan[23] = [a : bind port p0_4 to instance b]
 Plan[24] = [a : unbind port p1_3 from instance b]
 Plan[25] = [b : change state from q3 to q4]
 Plan[26] = [b : bind port p1_5 to instance a]
 Plan[27] = [b : unbind port p0_3 from instance a]
 Plan[28] = [a : change state from s4 to s5]
 Plan[29] = [a : bind port p0_5 to instance b]
 Plan[30] = [a : unbind port p1_4 from instance b]
 Plan[31] = [b : change state from q4 to q5]
 Plan[32] = [b : bind port p1_6 to instance a]
 Plan[33] = [b : unbind port p0_4 from instance a]
 Plan[34] = [a : change state from s5 to s6]
 Plan[35] = [a : bind port p0_6 to instance b]
 Plan[36] = [a : unbind port p1_5 from instance b]
Vertex popped: b (q5,q6)
STACK = 
[]
It's an intermediate vertex => add action [b : change state from q5 to q6] to the plan.
Deal with go/blue edges
Deal with return/red edges
Deal with successor vertex.
Vertex removed: b (q5,q6)

 ************************* NEED INSTANCE DUPLICATION *************************** 
The list of candidates is the following one: a (s6,s7)
Chosen vertex for splitting = a (s6,s7)
Built the following new vertex = a'' (s6,D)
Pushed duplicated vertex: a (s6,s7)
STACK = 
a (s6,s7) | 
External loop iteration i = 2

*********************** Internal loop iteration j = 0
Plan BEFORE: 
 Plan[1] = [Create instance b:B]
 Plan[2] = [Create instance a':A]
 Plan[3] = [Create instance a'':A]
 Plan[4] = [Create instance a:A]
 Plan[5] = [a' : change state from s0 to s1]
 Plan[6] = [a'' : change state from s0 to s1]
 Plan[7] = [a : change state from s0 to s1]
 Plan[8] = [a' : bind port p0_1 to instance b]
 Plan[9] = [b : change state from q0 to q1]
 Plan[10] = [b : bind port p1_2 to instance a']
 Plan[11] = [b : bind port p1_2 to instance a'']
 Plan[12] = [b : bind port p1_2 to instance a]
 Plan[13] = [a'' : change state from s1 to s2]
 Plan[14] = [a : change state from s1 to s2]
 Plan[15] = [a'' : bind port p0_2 to instance b]
 Plan[16] = [b : change state from q1 to q2]
 Plan[17] = [b : bind port p1_3 to instance a'']
 Plan[18] = [b : bind port p1_3 to instance a]
 Plan[19] = [b : unbind port p0_1 from instance a']
 Plan[20] = [a' : stop]
 Plan[21] = [a'' : change state from s2 to s3]
 Plan[22] = [a : change state from s2 to s3]
 Plan[23] = [a'' : bind port p0_3 to instance b]
 Plan[24] = [a'' : unbind port p1_2 from instance b]
 Plan[25] = [a : unbind port p1_2 from instance b]
 Plan[26] = [b : change state from q2 to q3]
 Plan[27] = [b : bind port p1_4 to instance a'']
 Plan[28] = [b : bind port p1_4 to instance a]
 Plan[29] = [b : unbind port p0_2 from instance a'']
 Plan[30] = [a'' : change state from s3 to s4]
 Plan[31] = [a : change state from s3 to s4]
 Plan[32] = [a'' : bind port p0_4 to instance b]
 Plan[33] = [a'' : unbind port p1_3 from instance b]
 Plan[34] = [a : unbind port p1_3 from instance b]
 Plan[35] = [b : change state from q3 to q4]
 Plan[36] = [b : bind port p1_5 to instance a'']
 Plan[37] = [b : bind port p1_5 to instance a]
 Plan[38] = [b : unbind port p0_3 from instance a'']
 Plan[39] = [a'' : change state from s4 to s5]
 Plan[40] = [a : change state from s4 to s5]
 Plan[41] = [a'' : bind port p0_5 to instance b]
 Plan[42] = [a'' : unbind port p1_4 from instance b]
 Plan[43] = [a : unbind port p1_4 from instance b]
 Plan[44] = [b : change state from q4 to q5]
 Plan[45] = [b : bind port p1_6 to instance a'']
 Plan[46] = [b : bind port p1_6 to instance a]
 Plan[47] = [b : unbind port p0_4 from instance a'']
 Plan[48] = [a'' : change state from s5 to s6]
 Plan[49] = [a : change state from s5 to s6]
 Plan[50] = [a'' : bind port p0_6 to instance b]
 Plan[51] = [a'' : unbind port p1_5 from instance b]
 Plan[52] = [a : unbind port p1_5 from instance b]
 Plan[53] = [b : change state from q5 to q6]
 Plan[54] = [b : bind port p1_7 to instance a'']
 Plan[55] = [b : bind port p1_7 to instance a]
 Plan[56] = [b : unbind port p0_5 from instance a'']
Vertex popped: a (s6,s7)
STACK = 
[]
It's an intermediate vertex => add action [a : change state from s6 to s7] to the plan.
Deal with go/blue edges
Deal with return/red edges
RETURN Edge: PUSH vertex: b (q6,q7)
STACK = 
b (q6,q7) | 
Deal with successor vertex.
Vertex removed: a (s6,s7)

*********************** Internal loop iteration j = 1
Plan BEFORE: 
 Plan[1] = [Create instance b:B]
 Plan[2] = [Create instance a':A]
 Plan[3] = [Create instance a'':A]
 Plan[4] = [Create instance a:A]
 Plan[5] = [a' : change state from s0 to s1]
 Plan[6] = [a'' : change state from s0 to s1]
 Plan[7] = [a : change state from s0 to s1]
 Plan[8] = [a' : bind port p0_1 to instance b]
 Plan[9] = [b : change state from q0 to q1]
 Plan[10] = [b : bind port p1_2 to instance a']
 Plan[11] = [b : bind port p1_2 to instance a'']
 Plan[12] = [b : bind port p1_2 to instance a]
 Plan[13] = [a'' : change state from s1 to s2]
 Plan[14] = [a : change state from s1 to s2]
 Plan[15] = [a'' : bind port p0_2 to instance b]
 Plan[16] = [b : change state from q1 to q2]
 Plan[17] = [b : bind port p1_3 to instance a'']
 Plan[18] = [b : bind port p1_3 to instance a]
 Plan[19] = [b : unbind port p0_1 from instance a']
 Plan[20] = [a' : stop]
 Plan[21] = [a'' : change state from s2 to s3]
 Plan[22] = [a : change state from s2 to s3]
 Plan[23] = [a'' : bind port p0_3 to instance b]
 Plan[24] = [a'' : unbind port p1_2 from instance b]
 Plan[25] = [a : unbind port p1_2 from instance b]
 Plan[26] = [b : change state from q2 to q3]
 Plan[27] = [b : bind port p1_4 to instance a'']
 Plan[28] = [b : bind port p1_4 to instance a]
 Plan[29] = [b : unbind port p0_2 from instance a'']
 Plan[30] = [a'' : change state from s3 to s4]
 Plan[31] = [a : change state from s3 to s4]
 Plan[32] = [a'' : bind port p0_4 to instance b]
 Plan[33] = [a'' : unbind port p1_3 from instance b]
 Plan[34] = [a : unbind port p1_3 from instance b]
 Plan[35] = [b : change state from q3 to q4]
 Plan[36] = [b : bind port p1_5 to instance a'']
 Plan[37] = [b : bind port p1_5 to instance a]
 Plan[38] = [b : unbind port p0_3 from instance a'']
 Plan[39] = [a'' : change state from s4 to s5]
 Plan[40] = [a : change state from s4 to s5]
 Plan[41] = [a'' : bind port p0_5 to instance b]
 Plan[42] = [a'' : unbind port p1_4 from instance b]
 Plan[43] = [a : unbind port p1_4 from instance b]
 Plan[44] = [b : change state from q4 to q5]
 Plan[45] = [b : bind port p1_6 to instance a'']
 Plan[46] = [b : bind port p1_6 to instance a]
 Plan[47] = [b : unbind port p0_4 from instance a'']
 Plan[48] = [a'' : change state from s5 to s6]
 Plan[49] = [a : change state from s5 to s6]
 Plan[50] = [a'' : bind port p0_6 to instance b]
 Plan[51] = [a'' : unbind port p1_5 from instance b]
 Plan[52] = [a : unbind port p1_5 from instance b]
 Plan[53] = [b : change state from q5 to q6]
 Plan[54] = [b : bind port p1_7 to instance a'']
 Plan[55] = [b : bind port p1_7 to instance a]
 Plan[56] = [b : unbind port p0_5 from instance a'']
 Plan[57] = [a : change state from s6 to s7]
 Plan[58] = [a : bind port p0_7 to instance b]
 Plan[59] = [a : unbind port p1_6 from instance b]
Vertex popped: b (q6,q7)
STACK = 
[]
It's an intermediate vertex => add action [b : change state from q6 to q7] to the plan.
Deal with go/blue edges
GO Edge: PUSH vertex: a (s7,s8)
STACK = 
a (s7,s8) | 
Deal with return/red edges
RETURN Edge: PUSH vertex: a'' (s6,D)
STACK = 
a'' (s6,D) | a (s7,s8) | 
Deal with successor vertex.
Vertex removed: b (q6,q7)

*********************** Internal loop iteration j = 2
Plan BEFORE: 
 Plan[1] = [Create instance b:B]
 Plan[2] = [Create instance a':A]
 Plan[3] = [Create instance a'':A]
 Plan[4] = [Create instance a:A]
 Plan[5] = [a' : change state from s0 to s1]
 Plan[6] = [a'' : change state from s0 to s1]
 Plan[7] = [a : change state from s0 to s1]
 Plan[8] = [a' : bind port p0_1 to instance b]
 Plan[9] = [b : change state from q0 to q1]
 Plan[10] = [b : bind port p1_2 to instance a']
 Plan[11] = [b : bind port p1_2 to instance a'']
 Plan[12] = [b : bind port p1_2 to instance a]
 Plan[13] = [a'' : change state from s1 to s2]
 Plan[14] = [a : change state from s1 to s2]
 Plan[15] = [a'' : bind port p0_2 to instance b]
 Plan[16] = [b : change state from q1 to q2]
 Plan[17] = [b : bind port p1_3 to instance a'']
 Plan[18] = [b : bind port p1_3 to instance a]
 Plan[19] = [b : unbind port p0_1 from instance a']
 Plan[20] = [a' : stop]
 Plan[21] = [a'' : change state from s2 to s3]
 Plan[22] = [a : change state from s2 to s3]
 Plan[23] = [a'' : bind port p0_3 to instance b]
 Plan[24] = [a'' : unbind port p1_2 from instance b]
 Plan[25] = [a : unbind port p1_2 from instance b]
 Plan[26] = [b : change state from q2 to q3]
 Plan[27] = [b : bind port p1_4 to instance a'']
 Plan[28] = [b : bind port p1_4 to instance a]
 Plan[29] = [b : unbind port p0_2 from instance a'']
 Plan[30] = [a'' : change state from s3 to s4]
 Plan[31] = [a : change state from s3 to s4]
 Plan[32] = [a'' : bind port p0_4 to instance b]
 Plan[33] = [a'' : unbind port p1_3 from instance b]
 Plan[34] = [a : unbind port p1_3 from instance b]
 Plan[35] = [b : change state from q3 to q4]
 Plan[36] = [b : bind port p1_5 to instance a'']
 Plan[37] = [b : bind port p1_5 to instance a]
 Plan[38] = [b : unbind port p0_3 from instance a'']
 Plan[39] = [a'' : change state from s4 to s5]
 Plan[40] = [a : change state from s4 to s5]
 Plan[41] = [a'' : bind port p0_5 to instance b]
 Plan[42] = [a'' : unbind port p1_4 from instance b]
 Plan[43] = [a : unbind port p1_4 from instance b]
 Plan[44] = [b : change state from q4 to q5]
 Plan[45] = [b : bind port p1_6 to instance a'']
 Plan[46] = [b : bind port p1_6 to instance a]
 Plan[47] = [b : unbind port p0_4 from instance a'']
 Plan[48] = [a'' : change state from s5 to s6]
 Plan[49] = [a : change state from s5 to s6]
 Plan[50] = [a'' : bind port p0_6 to instance b]
 Plan[51] = [a'' : unbind port p1_5 from instance b]
 Plan[52] = [a : unbind port p1_5 from instance b]
 Plan[53] = [b : change state from q5 to q6]
 Plan[54] = [b : bind port p1_7 to instance a'']
 Plan[55] = [b : bind port p1_7 to instance a]
 Plan[56] = [b : unbind port p0_5 from instance a'']
 Plan[57] = [a : change state from s6 to s7]
 Plan[58] = [a : bind port p0_7 to instance b]
 Plan[59] = [a : unbind port p1_6 from instance b]
 Plan[60] = [b : change state from q6 to q7]
 Plan[61] = [b : bind port p1_8 to instance a]
 Plan[62] = [b : unbind port p0_6 from instance a'']
Vertex popped: a'' (s6,D)
STACK = 
a (s7,s8) | 
Deal with return/red edges
Current vertex is final: we add a Del action to the plan.
Vertex removed: a'' (s6,D)

*********************** Internal loop iteration j = 3
Plan BEFORE: 
 Plan[1] = [Create instance b:B]
 Plan[2] = [Create instance a':A]
 Plan[3] = [Create instance a'':A]
 Plan[4] = [Create instance a:A]
 Plan[5] = [a' : change state from s0 to s1]
 Plan[6] = [a'' : change state from s0 to s1]
 Plan[7] = [a : change state from s0 to s1]
 Plan[8] = [a' : bind port p0_1 to instance b]
 Plan[9] = [b : change state from q0 to q1]
 Plan[10] = [b : bind port p1_2 to instance a']
 Plan[11] = [b : bind port p1_2 to instance a'']
 Plan[12] = [b : bind port p1_2 to instance a]
 Plan[13] = [a'' : change state from s1 to s2]
 Plan[14] = [a : change state from s1 to s2]
 Plan[15] = [a'' : bind port p0_2 to instance b]
 Plan[16] = [b : change state from q1 to q2]
 Plan[17] = [b : bind port p1_3 to instance a'']
 Plan[18] = [b : bind port p1_3 to instance a]
 Plan[19] = [b : unbind port p0_1 from instance a']
 Plan[20] = [a' : stop]
 Plan[21] = [a'' : change state from s2 to s3]
 Plan[22] = [a : change state from s2 to s3]
 Plan[23] = [a'' : bind port p0_3 to instance b]
 Plan[24] = [a'' : unbind port p1_2 from instance b]
 Plan[25] = [a : unbind port p1_2 from instance b]
 Plan[26] = [b : change state from q2 to q3]
 Plan[27] = [b : bind port p1_4 to instance a'']
 Plan[28] = [b : bind port p1_4 to instance a]
 Plan[29] = [b : unbind port p0_2 from instance a'']
 Plan[30] = [a'' : change state from s3 to s4]
 Plan[31] = [a : change state from s3 to s4]
 Plan[32] = [a'' : bind port p0_4 to instance b]
 Plan[33] = [a'' : unbind port p1_3 from instance b]
 Plan[34] = [a : unbind port p1_3 from instance b]
 Plan[35] = [b : change state from q3 to q4]
 Plan[36] = [b : bind port p1_5 to instance a'']
 Plan[37] = [b : bind port p1_5 to instance a]
 Plan[38] = [b : unbind port p0_3 from instance a'']
 Plan[39] = [a'' : change state from s4 to s5]
 Plan[40] = [a : change state from s4 to s5]
 Plan[41] = [a'' : bind port p0_5 to instance b]
 Plan[42] = [a'' : unbind port p1_4 from instance b]
 Plan[43] = [a : unbind port p1_4 from instance b]
 Plan[44] = [b : change state from q4 to q5]
 Plan[45] = [b : bind port p1_6 to instance a'']
 Plan[46] = [b : bind port p1_6 to instance a]
 Plan[47] = [b : unbind port p0_4 from instance a'']
 Plan[48] = [a'' : change state from s5 to s6]
 Plan[49] = [a : change state from s5 to s6]
 Plan[50] = [a'' : bind port p0_6 to instance b]
 Plan[51] = [a'' : unbind port p1_5 from instance b]
 Plan[52] = [a : unbind port p1_5 from instance b]
 Plan[53] = [b : change state from q5 to q6]
 Plan[54] = [b : bind port p1_7 to instance a'']
 Plan[55] = [b : bind port p1_7 to instance a]
 Plan[56] = [b : unbind port p0_5 from instance a'']
 Plan[57] = [a : change state from s6 to s7]
 Plan[58] = [a : bind port p0_7 to instance b]
 Plan[59] = [a : unbind port p1_6 from instance b]
 Plan[60] = [b : change state from q6 to q7]
 Plan[61] = [b : bind port p1_8 to instance a]
 Plan[62] = [b : unbind port p0_6 from instance a'']
 Plan[63] = [a'' : stop]
Vertex popped: a (s7,s8)
STACK = 
[]
It's an intermediate vertex => add action [a : change state from s7 to s8] to the plan.
Deal with go/blue edges
Deal with return/red edges
RETURN Edge: PUSH vertex: b (q7,q8)
STACK = 
b (q7,q8) | 
Deal with successor vertex.
Vertex removed: a (s7,s8)

*********************** Internal loop iteration j = 4
Plan BEFORE: 
 Plan[1] = [Create instance b:B]
 Plan[2] = [Create instance a':A]
 Plan[3] = [Create instance a'':A]
 Plan[4] = [Create instance a:A]
 Plan[5] = [a' : change state from s0 to s1]
 Plan[6] = [a'' : change state from s0 to s1]
 Plan[7] = [a : change state from s0 to s1]
 Plan[8] = [a' : bind port p0_1 to instance b]
 Plan[9] = [b : change state from q0 to q1]
 Plan[10] = [b : bind port p1_2 to instance a']
 Plan[11] = [b : bind port p1_2 to instance a'']
 Plan[12] = [b : bind port p1_2 to instance a]
 Plan[13] = [a'' : change state from s1 to s2]
 Plan[14] = [a : change state from s1 to s2]
 Plan[15] = [a'' : bind port p0_2 to instance b]
 Plan[16] = [b : change state from q1 to q2]
 Plan[17] = [b : bind port p1_3 to instance a'']
 Plan[18] = [b : bind port p1_3 to instance a]
 Plan[19] = [b : unbind port p0_1 from instance a']
 Plan[20] = [a' : stop]
 Plan[21] = [a'' : change state from s2 to s3]
 Plan[22] = [a : change state from s2 to s3]
 Plan[23] = [a'' : bind port p0_3 to instance b]
 Plan[24] = [a'' : unbind port p1_2 from instance b]
 Plan[25] = [a : unbind port p1_2 from instance b]
 Plan[26] = [b : change state from q2 to q3]
 Plan[27] = [b : bind port p1_4 to instance a'']
 Plan[28] = [b : bind port p1_4 to instance a]
 Plan[29] = [b : unbind port p0_2 from instance a'']
 Plan[30] = [a'' : change state from s3 to s4]
 Plan[31] = [a : change state from s3 to s4]
 Plan[32] = [a'' : bind port p0_4 to instance b]
 Plan[33] = [a'' : unbind port p1_3 from instance b]
 Plan[34] = [a : unbind port p1_3 from instance b]
 Plan[35] = [b : change state from q3 to q4]
 Plan[36] = [b : bind port p1_5 to instance a'']
 Plan[37] = [b : bind port p1_5 to instance a]
 Plan[38] = [b : unbind port p0_3 from instance a'']
 Plan[39] = [a'' : change state from s4 to s5]
 Plan[40] = [a : change state from s4 to s5]
 Plan[41] = [a'' : bind port p0_5 to instance b]
 Plan[42] = [a'' : unbind port p1_4 from instance b]
 Plan[43] = [a : unbind port p1_4 from instance b]
 Plan[44] = [b : change state from q4 to q5]
 Plan[45] = [b : bind port p1_6 to instance a'']
 Plan[46] = [b : bind port p1_6 to instance a]
 Plan[47] = [b : unbind port p0_4 from instance a'']
 Plan[48] = [a'' : change state from s5 to s6]
 Plan[49] = [a : change state from s5 to s6]
 Plan[50] = [a'' : bind port p0_6 to instance b]
 Plan[51] = [a'' : unbind port p1_5 from instance b]
 Plan[52] = [a : unbind port p1_5 from instance b]
 Plan[53] = [b : change state from q5 to q6]
 Plan[54] = [b : bind port p1_7 to instance a'']
 Plan[55] = [b : bind port p1_7 to instance a]
 Plan[56] = [b : unbind port p0_5 from instance a'']
 Plan[57] = [a : change state from s6 to s7]
 Plan[58] = [a : bind port p0_7 to instance b]
 Plan[59] = [a : unbind port p1_6 from instance b]
 Plan[60] = [b : change state from q6 to q7]
 Plan[61] = [b : bind port p1_8 to instance a]
 Plan[62] = [b : unbind port p0_6 from instance a'']
 Plan[63] = [a'' : stop]
 Plan[64] = [a : change state from s7 to s8]
 Plan[65] = [a : bind port p0_8 to instance b]
 Plan[66] = [a : unbind port p1_7 from instance b]
Vertex popped: b (q7,q8)
STACK = 
[]
It's an intermediate vertex => add action [b : change state from q7 to q8] to the plan.
Deal with go/blue edges
Deal with return/red edges
RETURN Edge: PUSH vertex: a (s8,s9)
STACK = 
a (s8,s9) | 
Deal with successor vertex.
Vertex removed: b (q7,q8)

*********************** Internal loop iteration j = 5
Plan BEFORE: 
 Plan[1] = [Create instance b:B]
 Plan[2] = [Create instance a':A]
 Plan[3] = [Create instance a'':A]
 Plan[4] = [Create instance a:A]
 Plan[5] = [a' : change state from s0 to s1]
 Plan[6] = [a'' : change state from s0 to s1]
 Plan[7] = [a : change state from s0 to s1]
 Plan[8] = [a' : bind port p0_1 to instance b]
 Plan[9] = [b : change state from q0 to q1]
 Plan[10] = [b : bind port p1_2 to instance a']
 Plan[11] = [b : bind port p1_2 to instance a'']
 Plan[12] = [b : bind port p1_2 to instance a]
 Plan[13] = [a'' : change state from s1 to s2]
 Plan[14] = [a : change state from s1 to s2]
 Plan[15] = [a'' : bind port p0_2 to instance b]
 Plan[16] = [b : change state from q1 to q2]
 Plan[17] = [b : bind port p1_3 to instance a'']
 Plan[18] = [b : bind port p1_3 to instance a]
 Plan[19] = [b : unbind port p0_1 from instance a']
 Plan[20] = [a' : stop]
 Plan[21] = [a'' : change state from s2 to s3]
 Plan[22] = [a : change state from s2 to s3]
 Plan[23] = [a'' : bind port p0_3 to instance b]
 Plan[24] = [a'' : unbind port p1_2 from instance b]
 Plan[25] = [a : unbind port p1_2 from instance b]
 Plan[26] = [b : change state from q2 to q3]
 Plan[27] = [b : bind port p1_4 to instance a'']
 Plan[28] = [b : bind port p1_4 to instance a]
 Plan[29] = [b : unbind port p0_2 from instance a'']
 Plan[30] = [a'' : change state from s3 to s4]
 Plan[31] = [a : change state from s3 to s4]
 Plan[32] = [a'' : bind port p0_4 to instance b]
 Plan[33] = [a'' : unbind port p1_3 from instance b]
 Plan[34] = [a : unbind port p1_3 from instance b]
 Plan[35] = [b : change state from q3 to q4]
 Plan[36] = [b : bind port p1_5 to instance a'']
 Plan[37] = [b : bind port p1_5 to instance a]
 Plan[38] = [b : unbind port p0_3 from instance a'']
 Plan[39] = [a'' : change state from s4 to s5]
 Plan[40] = [a : change state from s4 to s5]
 Plan[41] = [a'' : bind port p0_5 to instance b]
 Plan[42] = [a'' : unbind port p1_4 from instance b]
 Plan[43] = [a : unbind port p1_4 from instance b]
 Plan[44] = [b : change state from q4 to q5]
 Plan[45] = [b : bind port p1_6 to instance a'']
 Plan[46] = [b : bind port p1_6 to instance a]
 Plan[47] = [b : unbind port p0_4 from instance a'']
 Plan[48] = [a'' : change state from s5 to s6]
 Plan[49] = [a : change state from s5 to s6]
 Plan[50] = [a'' : bind port p0_6 to instance b]
 Plan[51] = [a'' : unbind port p1_5 from instance b]
 Plan[52] = [a : unbind port p1_5 from instance b]
 Plan[53] = [b : change state from q5 to q6]
 Plan[54] = [b : bind port p1_7 to instance a'']
 Plan[55] = [b : bind port p1_7 to instance a]
 Plan[56] = [b : unbind port p0_5 from instance a'']
 Plan[57] = [a : change state from s6 to s7]
 Plan[58] = [a : bind port p0_7 to instance b]
 Plan[59] = [a : unbind port p1_6 from instance b]
 Plan[60] = [b : change state from q6 to q7]
 Plan[61] = [b : bind port p1_8 to instance a]
 Plan[62] = [b : unbind port p0_6 from instance a'']
 Plan[63] = [a'' : stop]
 Plan[64] = [a : change state from s7 to s8]
 Plan[65] = [a : bind port p0_8 to instance b]
 Plan[66] = [a : unbind port p1_7 from instance b]
 Plan[67] = [b : change state from q7 to q8]
 Plan[68] = [b : bind port p1_9 to instance a]
 Plan[69] = [b : unbind port p0_7 from instance a]
Vertex popped: a (s8,s9)
STACK = 
[]
It's an intermediate vertex => add action [a : change state from s8 to s9] to the plan.
Deal with go/blue edges
Deal with return/red edges
RETURN Edge: PUSH vertex: b (q8,q9)
STACK = 
b (q8,q9) | 
Deal with successor vertex.
Vertex removed: a (s8,s9)

*********************** Internal loop iteration j = 6
Plan BEFORE: 
 Plan[1] = [Create instance b:B]
 Plan[2] = [Create instance a':A]
 Plan[3] = [Create instance a'':A]
 Plan[4] = [Create instance a:A]
 Plan[5] = [a' : change state from s0 to s1]
 Plan[6] = [a'' : change state from s0 to s1]
 Plan[7] = [a : change state from s0 to s1]
 Plan[8] = [a' : bind port p0_1 to instance b]
 Plan[9] = [b : change state from q0 to q1]
 Plan[10] = [b : bind port p1_2 to instance a']
 Plan[11] = [b : bind port p1_2 to instance a'']
 Plan[12] = [b : bind port p1_2 to instance a]
 Plan[13] = [a'' : change state from s1 to s2]
 Plan[14] = [a : change state from s1 to s2]
 Plan[15] = [a'' : bind port p0_2 to instance b]
 Plan[16] = [b : change state from q1 to q2]
 Plan[17] = [b : bind port p1_3 to instance a'']
 Plan[18] = [b : bind port p1_3 to instance a]
 Plan[19] = [b : unbind port p0_1 from instance a']
 Plan[20] = [a' : stop]
 Plan[21] = [a'' : change state from s2 to s3]
 Plan[22] = [a : change state from s2 to s3]
 Plan[23] = [a'' : bind port p0_3 to instance b]
 Plan[24] = [a'' : unbind port p1_2 from instance b]
 Plan[25] = [a : unbind port p1_2 from instance b]
 Plan[26] = [b : change state from q2 to q3]
 Plan[27] = [b : bind port p1_4 to instance a'']
 Plan[28] = [b : bind port p1_4 to instance a]
 Plan[29] = [b : unbind port p0_2 from instance a'']
 Plan[30] = [a'' : change state from s3 to s4]
 Plan[31] = [a : change state from s3 to s4]
 Plan[32] = [a'' : bind port p0_4 to instance b]
 Plan[33] = [a'' : unbind port p1_3 from instance b]
 Plan[34] = [a : unbind port p1_3 from instance b]
 Plan[35] = [b : change state from q3 to q4]
 Plan[36] = [b : bind port p1_5 to instance a'']
 Plan[37] = [b : bind port p1_5 to instance a]
 Plan[38] = [b : unbind port p0_3 from instance a'']
 Plan[39] = [a'' : change state from s4 to s5]
 Plan[40] = [a : change state from s4 to s5]
 Plan[41] = [a'' : bind port p0_5 to instance b]
 Plan[42] = [a'' : unbind port p1_4 from instance b]
 Plan[43] = [a : unbind port p1_4 from instance b]
 Plan[44] = [b : change state from q4 to q5]
 Plan[45] = [b : bind port p1_6 to instance a'']
 Plan[46] = [b : bind port p1_6 to instance a]
 Plan[47] = [b : unbind port p0_4 from instance a'']
 Plan[48] = [a'' : change state from s5 to s6]
 Plan[49] = [a : change state from s5 to s6]
 Plan[50] = [a'' : bind port p0_6 to instance b]
 Plan[51] = [a'' : unbind port p1_5 from instance b]
 Plan[52] = [a : unbind port p1_5 from instance b]
 Plan[53] = [b : change state from q5 to q6]
 Plan[54] = [b : bind port p1_7 to instance a'']
 Plan[55] = [b : bind port p1_7 to instance a]
 Plan[56] = [b : unbind port p0_5 from instance a'']
 Plan[57] = [a : change state from s6 to s7]
 Plan[58] = [a : bind port p0_7 to instance b]
 Plan[59] = [a : unbind port p1_6 from instance b]
 Plan[60] = [b : change state from q6 to q7]
 Plan[61] = [b : bind port p1_8 to instance a]
 Plan[62] = [b : unbind port p0_6 from instance a'']
 Plan[63] = [a'' : stop]
 Plan[64] = [a : change state from s7 to s8]
 Plan[65] = [a : bind port p0_8 to instance b]
 Plan[66] = [a : unbind port p1_7 from instance b]
 Plan[67] = [b : change state from q7 to q8]
 Plan[68] = [b : bind port p1_9 to instance a]
 Plan[69] = [b : unbind port p0_7 from instance a]
 Plan[70] = [a : change state from s8 to s9]
 Plan[71] = [a : bind port p0_9 to instance b]
 Plan[72] = [a : unbind port p1_8 from instance b]
Vertex popped: b (q8,q9)
STACK = 
[]
It's an intermediate vertex => add action [b : change state from q8 to q9] to the plan.
Deal with go/blue edges
Deal with return/red edges
Deal with successor vertex.
Target has been REACHED.
Vertex removed: b (q8,q9)

The computed PLAN is: 
 Plan[1] = [Create instance b:B]
 Plan[2] = [Create instance a':A]
 Plan[3] = [Create instance a'':A]
 Plan[4] = [Create instance a:A]
 Plan[5] = [a' : change state from s0 to s1]
 Plan[6] = [a'' : change state from s0 to s1]
 Plan[7] = [a : change state from s0 to s1]
 Plan[8] = [a' : bind port p0_1 to instance b]
 Plan[9] = [b : change state from q0 to q1]
 Plan[10] = [b : bind port p1_2 to instance a']
 Plan[11] = [b : bind port p1_2 to instance a'']
 Plan[12] = [b : bind port p1_2 to instance a]
 Plan[13] = [a'' : change state from s1 to s2]
 Plan[14] = [a : change state from s1 to s2]
 Plan[15] = [a'' : bind port p0_2 to instance b]
 Plan[16] = [b : change state from q1 to q2]
 Plan[17] = [b : bind port p1_3 to instance a'']
 Plan[18] = [b : bind port p1_3 to instance a]
 Plan[19] = [b : unbind port p0_1 from instance a']
 Plan[20] = [a' : stop]
 Plan[21] = [a'' : change state from s2 to s3]
 Plan[22] = [a : change state from s2 to s3]
 Plan[23] = [a'' : bind port p0_3 to instance b]
 Plan[24] = [a'' : unbind port p1_2 from instance b]
 Plan[25] = [a : unbind port p1_2 from instance b]
 Plan[26] = [b : change state from q2 to q3]
 Plan[27] = [b : bind port p1_4 to instance a'']
 Plan[28] = [b : bind port p1_4 to instance a]
 Plan[29] = [b : unbind port p0_2 from instance a'']
 Plan[30] = [a'' : change state from s3 to s4]
 Plan[31] = [a : change state from s3 to s4]
 Plan[32] = [a'' : bind port p0_4 to instance b]
 Plan[33] = [a'' : unbind port p1_3 from instance b]
 Plan[34] = [a : unbind port p1_3 from instance b]
 Plan[35] = [b : change state from q3 to q4]
 Plan[36] = [b : bind port p1_5 to instance a'']
 Plan[37] = [b : bind port p1_5 to instance a]
 Plan[38] = [b : unbind port p0_3 from instance a'']
 Plan[39] = [a'' : change state from s4 to s5]
 Plan[40] = [a : change state from s4 to s5]
 Plan[41] = [a'' : bind port p0_5 to instance b]
 Plan[42] = [a'' : unbind port p1_4 from instance b]
 Plan[43] = [a : unbind port p1_4 from instance b]
 Plan[44] = [b : change state from q4 to q5]
 Plan[45] = [b : bind port p1_6 to instance a'']
 Plan[46] = [b : bind port p1_6 to instance a]
 Plan[47] = [b : unbind port p0_4 from instance a'']
 Plan[48] = [a'' : change state from s5 to s6]
 Plan[49] = [a : change state from s5 to s6]
 Plan[50] = [a'' : bind port p0_6 to instance b]
 Plan[51] = [a'' : unbind port p1_5 from instance b]
 Plan[52] = [a : unbind port p1_5 from instance b]
 Plan[53] = [b : change state from q5 to q6]
 Plan[54] = [b : bind port p1_7 to instance a'']
 Plan[55] = [b : bind port p1_7 to instance a]
 Plan[56] = [b : unbind port p0_5 from instance a'']
 Plan[57] = [a : change state from s6 to s7]
 Plan[58] = [a : bind port p0_7 to instance b]
 Plan[59] = [a : unbind port p1_6 from instance b]
 Plan[60] = [b : change state from q6 to q7]
 Plan[61] = [b : bind port p1_8 to instance a]
 Plan[62] = [b : unbind port p0_6 from instance a'']
 Plan[63] = [a'' : stop]
 Plan[64] = [a : change state from s7 to s8]
 Plan[65] = [a : bind port p0_8 to instance b]
 Plan[66] = [a : unbind port p1_7 from instance b]
 Plan[67] = [b : change state from q7 to q8]
 Plan[68] = [b : bind port p1_9 to instance a]
 Plan[69] = [b : unbind port p0_7 from instance a]
 Plan[70] = [a : change state from s8 to s9]
 Plan[71] = [a : bind port p0_9 to instance b]
 Plan[72] = [a : unbind port p1_8 from instance b]
 Plan[73] = [b : change state from q8 to q9]
 Plan[74] = [b : unbind port p0_8 from instance a]
